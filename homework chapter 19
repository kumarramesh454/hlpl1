#include <iostream>
using namespace std;
template <typename TN> class Vectors
{
  //attributes
    TN* list;
    int size,x;
vector_def:
    Vectors()     
    {

        list = new TN[1];
        size = 1;
        x = 0;
    }
    void push_front(TN data)
    {
        if (x == size) {
            increase_memory(5)
        }
        int t=1;
        TN* temp =new TN[size]
        for (int i=0;i<size;i++){
          temp[t]=list[i];
          t++;
        }
        list[0]=data;
        x++;
    }
    void push_back(TN data)
    { 
        if (x == size) {
            increase_memory(5);
        }

        
        list[x] = data;
        x++;
    }
    TN value_at_index(int i)
    {
        if (i < x){
            return list[i];
        }
    }
    void increase_memory(int d){
      TN* templist = new TN[size+d];

            for (int i = 0; i < size; i++) {
                templist[i] = list[i];
            }

            delete[] list;
            size += d;
            list = templist;
    }

    int pop_back() { 
      int poped_element = list[x];
      list[x]=0;
      x--; 
      return poped_element;
    }
    int pop_front(){
      int poped_element = list[0];
      TN* temp =new TN[size];
      for (int i=0;i<size-1;i++){
        temp[i]=list[i+1]
      }
      delete[] list;
      list=temp;
      x--;
      return poped_element;
    }

    int high_index(){
      int max=list[0];
      int index=0;
      for (int i =1; i<size; i++){
        if (list[i]>max){
          max=list[i];
          index=i;
        }
      }
      return index;
    }
    int get_size() { 
      return size; 
    }
    int high(){
      int max=list[0];
      for (int i =1; i<size; i++){
        if (list[i]>max){
          max=list[i];
        }
      }
      return max;
    }
    int get_count() { 
      return x;
    }   
    void print_all()
    {
        cout<<"{"
        for (int i = 0; i < x; i++) {
            cout << "["<<list[i] <<"]"<< ", ";
        }
        cout << "}"<<endl;
    }
};

int main()
{
  //Implementation of the methods in class Vectors
    Vectors<int> v1;
    v1.push_back(1);
    v1.push_back(2);
    v1.push_back(3);
    v1.push_back(4);
    cout<<"The highest value is in on index number:"<<v1.high_index()<<endl<<"Value is "<<v1.high();
    cout<<"All Elements: "<<endl;
    v1.print_all();
    //Poping front element :
    v1.pop_front();
    cout<<"Poped Front: "<<endl;
    v1.print_all();       // displaying
    cout<<"The highest value is in on index number:"<<v1.high_index()<<endl<<"Value is "<<v1.high();
    v1.pop_back();
    cout<<"Poped_back: "<<endl;
    v1.print_all();
    cout<<"The highest value is in on index number:"<<v1.high_index()<<endl<<"Value is "<<v1.high();

    system("pause");
    return 0;
}
